package images.edubiz.src.main.java.model;
// Generated Dec 29, 2011 10:44:56 AM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * InternalMsg generated by hbm2java
 */
@Entity
@Table(name="internal_msg"
    ,catalog="edubizforum"
)
public class InternalMsg  implements java.io.Serializable {


     private Long msgId;
     private UserRecord userRecordBySender;
     private UserRecord userRecordByReceiver;
     private String msgType;
     private Set<InternalMsgData> internalMsgDatas = new HashSet<InternalMsgData>(0);

    public InternalMsg() {
    }

	
    public InternalMsg(UserRecord userRecordBySender, UserRecord userRecordByReceiver, String msgType) {
        this.userRecordBySender = userRecordBySender;
        this.userRecordByReceiver = userRecordByReceiver;
        this.msgType = msgType;
    }
    public InternalMsg(UserRecord userRecordBySender, UserRecord userRecordByReceiver, String msgType, Set<InternalMsgData> internalMsgDatas) {
       this.userRecordBySender = userRecordBySender;
       this.userRecordByReceiver = userRecordByReceiver;
       this.msgType = msgType;
       this.internalMsgDatas = internalMsgDatas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="msg_id", unique=true, nullable=false)
    public Long getMsgId() {
        return this.msgId;
    }
    
    public void setMsgId(Long msgId) {
        this.msgId = msgId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="sender", nullable=false)
    public UserRecord getUserRecordBySender() {
        return this.userRecordBySender;
    }
    
    public void setUserRecordBySender(UserRecord userRecordBySender) {
        this.userRecordBySender = userRecordBySender;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="receiver", nullable=false)
    public UserRecord getUserRecordByReceiver() {
        return this.userRecordByReceiver;
    }
    
    public void setUserRecordByReceiver(UserRecord userRecordByReceiver) {
        this.userRecordByReceiver = userRecordByReceiver;
    }
    
    @Column(name="msg_type", nullable=false, length=10)
    public String getMsgType() {
        return this.msgType;
    }
    
    public void setMsgType(String msgType) {
        this.msgType = msgType;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="internalMsg")
    public Set<InternalMsgData> getInternalMsgDatas() {
        return this.internalMsgDatas;
    }
    
    public void setInternalMsgDatas(Set<InternalMsgData> internalMsgDatas) {
        this.internalMsgDatas = internalMsgDatas;
    }




}


